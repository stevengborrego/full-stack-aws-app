name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-west-2
      AWS_DEFAULT_OUTPUT: json
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
      
      # - name: Print changed files # To properly debug what is being deployed (It can be removed).
      #   run: |
      #     echo "List of changed files:" 
      #     echo $(git diff --name-only HEAD^ HEAD)

      # - name: Deploy Modified Files
      #   run: |
      #     # Constants
      #     S3_BUCKET=<YOUR S3 BUCKET>
      #     S3_KEY=<main.zip>
      #     LAMBDA_FUNCTION_NAME=<NAME OF THE LAMBDA FUNCTION>
      #     # Download the existing zip from S3
      #     aws s3 cp s3://$S3_BUCKET/$S3_KEY existing_lambda.zip
      #     # Unzip the existing package
      #     unzip existing_lambda.zip -d lambda_env
      #     # Copy only the modified .py files from the commit into the unzipped directory
      #     # This will maintain their directory structure.
      #     for file in $(git diff-tree --no-commit-id --name-only -r HEAD); do
      #         if [[ $file == *.py ]]; then
      #             # Create the directory structure in lambda_env for the modified file
      #             mkdir -p lambda_env/$(dirname $file)
      #             # Copy the modified file
      #             cp $file lambda_env/$file
      #             # Print what you've done with the file
      #             echo "Copied $file to lambda_env/$file"
      #             echo "Content of $file after copying:"
      #             cat lambda_env/$file
      #         fi
      #     done
      #     # Zip the directory again
      #     cd lambda_env
      #     zip -r ../updated_lambda.zip .
      #     cd ..
      #     # Upload the updated zip to S3
      #     aws s3 cp updated_lambda.zip s3://$S3_BUCKET/$S3_KEY
      #     # Update Lambda function code
      #     aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --s3-bucket $S3_BUCKET --s3-key $S3_KEY
      #     # Cleanup
      #     rm -r lambda_env
      #     rm existing_lambda.zip updated_lambda.zip
      #edit

      # - name: Create S3 bucket for lambda code
      #   run: aws s3 mb s3://back-end-function-bucket --region us-west-2

      # - name: Zip lambda function
      #   run: zip ./lambda/main.zip ./lambda/main.py

      - name: Deploy CloudFormation template
        run: aws cloudformation deploy --template-file ./template.yaml --stack-name aws-full-stack-app --capabilities CAPABILITY_IAM

      - name: Deploy Amplify app
        run: ./scripts/amplify-deploy.sh dcfdevtko6jp6 main
    